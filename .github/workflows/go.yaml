name: Go
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  # Split build, lint, and tests into different jobs so they run in parallel.
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.17'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build code
      run: go build ./...
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.17'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install goimports
      run: go install golang.org/x/tools/cmd/goimports@latest
    - run: goimports -w .
    - name: Run go mod tidy on all modules
      run: go mod tidy
    # If there are any diffs from goimports or go mod tidy, fail.
    - name: Verify no changes from goimports and go mod tidy.
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo 'To fix this check, run "goimports -w . && find . -name go.mod -execdir go mod tidy \;"'
          git status # Show the files that failed to pass the check.
          exit 1
        fi
  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.17'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: go vet
      run: go vet ./...
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - name: Check code
        uses: actions/checkout@v2
      - run: go test -v
